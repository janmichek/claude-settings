{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(git status)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(npm run dev)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(uvicorn:*)",
      "Bash(rg:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(git rev-list:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git fetch:*)",
      "Bash(diff:*) ",
      "Bash(pytest:*) ",
      "Bash(mkdir: *) ",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(pwd)",
      "Bash(touch:*)",
      "Bash(tsc:*)",
      "Bash(npm install:*)",
      "Bash(npm test:*) ",
      "Bash(head: *)",
      "Bash(tail:*)",
      "Bash(git diff --stat:*)",
      "Bash(git fetch --all --prune)",
      "Bash(git pull --ff-only:*)",
      "Bash(npm test --silent:*)",
      "Bash(pnpm test --silent:*)",
      "Bash(pytest -q:*)",
      "Bash(tsc --noEmit:*)",
      "Bash(tsc --noEmit:*) ",
      "Bash(npm run lint --silent:*)",
      "Bash(ruff .)",
      "Bash(black --check .)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(: (){: |:&};:)",
      "Bash(chmod -R 777 /)",
      "Bash(wget -0- | bash)",
      "Bash(sudo rm -rf /)",
      "Bash(mv ~ /dev/null)",
      "Bash(> ~/.bash_history)",
      "Bash(curl | bash)",
      "Bash(mkfs.) ",
      "Bash(echo > /etc*)",
      "Bash(kill -9 1)",
      "Bash(killalls)",
      "Bash(git clean)",
      "Bash(git push origin dev --force)",
      "Bash(git push origin david --force)",
      "Bash(git push origin main --force)",
      "Bash(git reset -hard)",
      "Bash(git push --force-with-lease)",
      "Bash(git push --force)",
      "Bash(git push -f)",
      "Bash(git push origin * --force)",
      "Bash(git push origin * --force-with-lease)",
      "Bash(git push * --force)",
      "Bash(git push * --force-with-lease)",
      "Bash(*--force*)",
      "Bash(*-f *)"
    ]
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "find . -name '*.vue' -o -name '*.js' | xargs eslint --fix --quiet 2>/dev/null || true"
          },
          {
            "type": "command",
            "command": "find . -name '*.vue' -o -name '*.css' | xargs stylelint --fix --quiet 2>/dev/null || true"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "terminal-notifier -message \"Claude Code Finished\" -sound default"
          },
          {
            "type": "command",
            "command": "say \"bipp\""
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/UserPromptSubmit/append_ultrathink.py"
          },
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/UserPromptSubmit/append_explain.py"
          },
          {
            "type": "command",
            "command": "python3 $CLAUDE_PROJECT_DIR/.claude/hooks/UserPromptSubmit/append_default.py"
          }
        ]
      }
    ]
  }
}



